/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


#define BAS_L 0
#define NAV_L 1
#define NUM_L 2
#define NMP_L 3
#define NVR_L 4
#define ADJ_L 5


// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

#define BT(n) BT_SEL n

/ {
    chosen {
       zmk,matrix_transform = &ortho_transform;
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <NUM_L NMP_L>;
            then-layer = <ADJ_L>;
        };
    };

    behaviors {
        td_nav: tap_dance_nav {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_NAV";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo NAV_L>, <&mo NUM_L>;
        };
        td_num: tap_dance_num {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_NUM";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo NUM_L>, <&mo NVR_L>;
        };
        td_nmp: tap_dance_nmp {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_NMP";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo NMP_L>, <&mo NAV_L>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
&kp TAB     &kp Q       &kp W       &kp E       &kp R      &kp T       &kp Y       &kp U       &kp I       &kp O       &kp P       &kp BSPC
&kp LCTRL   &kp A       &kp S       &kp D       &kp F      &kp G       &kp H       &kp J       &kp K       &kp L       &kp SEMI    &kp SQT
&kp LSHFT   &kp Z       &kp X       &kp C       &kp V      &kp B       &kp N       &kp M       &kp COMMA   &kp DOT     &kp FSLH    &kp RSHFT
                        &kp LGUI    &kp LALT    &kp SPACE  &td_nav     &td_num     &kp SPACE   &td_nmp     &none
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
&kp ESC     &kp GRAVE   &kp HOME    &kp UP      &kp END     &kp PG_UP   &kp F1      &kp F2      &kp F3      &kp F4      &kp F5      &trans
&trans      &kp LALT    &kp LEFT    &kp DOWN    &kp RIGHT   &kp PG_DN   &kp F6      &kp F7      &kp F8      &kp F9      &kp F10     &trans
&trans      &kp LGUI    &kp INS     &kp BSPC    &kp DEL     &kp ENTER   &kp F11     &kp F12     &kp PSCRN   &kp SLCK    &kp PAUSE_BREAK &trans
                        &trans      &trans      &kp BSPC    &trans      &trans      &trans      &trans      &trans
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
&kp GRAVE   &kp N1      &kp N2      &kp N3      &kp N4      &kp N5      &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &trans
&trans      &trans      &trans      &trans      &trans      &trans      &kp BSLH    &kp MINUS   &kp LBKT    &kp RBKT    &kp SEMI    &kp QUOT
&trans      &trans      &trans      &trans      &trans      &trans      &kp ENTER   &kp EQUAL   &kp COMMA   &kp DOT     &kp FSLH    &trans
                        &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans
            >;
        };

        numpad_layer {
            label = "Numpad";
            bindings = <
&trans      &trans      &trans      &trans      &trans      &trans      &none        &kp KP_N7  &kp KP_N8   &kp KP_N9   &kp RBKT    &trans
&trans      &trans      &trans      &trans      &trans      &trans      &kp KP_MINUS &kp KP_N4  &kp KP_N5   &kp KP_N6   &kp KP_MULTIPLY &kp KP_ENTER
&trans      &trans      &trans      &trans      &trans      &trans      &kp KP_PLUS  &kp KP_N1  &kp KP_N2   &kp KP_N3   &kp KP_DIVIDE &kp LGUI
                        &trans      &trans      &trans      &trans      &trans      &kp KP_N0   &trans      &kp KP_DOT
            >;
        };

        right_nav_layer {
            label = "Nav R";
            bindings = <
&trans      &trans      &trans      &trans      &trans      &trans      &none       &kp HOME    &kp UP      &kp END     &kp PG_UP   &trans
&trans      &trans      &trans      &trans      &trans      &trans      &none       &kp LEFT    &kp UP      &kp RIGHT   &kp PG_DN   &kp ENTER
&trans      &trans      &trans      &trans      &trans      &trans      &none       &none       &kp C_PP    &kp C_VOL_DN &kp C_VOL_UP &kp LGUI
                        &trans      &trans      &trans      &trans      &trans      &trans      &trans      &none
            >;
        };

        adjust_layer {
            label = "Adjust";
            bindings = <
&bootloader &bt BT(0)   &bt BT(1)   &bt BT(2)   &bt BT(3)   &bt BT(4)    &kp KP_NLCK &none       &none       &none       &none      &none
&kp CAPS    &none       &none       &none       &bt BT_CLR  &out OUT_BLE &none       &none       &none       &none       &none      &none
&none       &none       &none       &none       &none       &out OUT_USB &none       &none       &none       &none       &none      &none
                        &none       &none       &none       &none        &trans      &none       &trans      &none 
            >;
        };
    };
};

